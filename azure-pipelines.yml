# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'


stages:
  - stage: Build
    jobs:
      - job: "BuildAndPublishSonar"
        steps:
        #- script: |
        #    export SONAR_TOKEN=$(SONAR_TOKEN)
        #  displayName: 'Sonar Token'
        - script: ls $(System.DefaultWorkingDirectory)/pattern.strategy
          displayName: "Test"
        - script: |
            dotnet tool install --global dotnet-sonarscanner --version 5.7.1
            dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.9
            dotnet sonarscanner begin \
            /o:lucasmachado \
            /k:9D915261-4352-490A-858E-0D73D6BAFBE4 \
            /d:sonar.coverageReportPaths=../TestResults/SonarQube.xml \
            /d:sonar.host.url=https://sonarcloud.io \
            /d:sonar.coverage.exclusions="**Test*.cs"
          displayName: "Sonar Begin"
        - script: dotnet build --configuration $(buildConfiguration)
          displayName: 'Dotnet Build'
        - script: dotnet test --logger trx --results-directory ../TestResults/ --collect:"XPlat Code Coverage" --no-restore -m:1
          displayName: 'Dotnet Test'
        - script: reportgenerator -reporttypes:"SonarQube" -reports:"../TestResults/**/*.cobertura.xml" -targetdir:"../TestResults/"
          displayName: 'Report Generator'
        - script: dotnet sonarscanner end
          env:
            SONAR_TOKEN: $(SONAR_TOKEN)
          displayName: 'Sonar End'
  - stage: PublishPackage
    dependsOn:
    - Build
    condition: succeeded('Build')
    jobs:
      - job: 
        steps:
          - script: ls $(System.DefaultWorkingDirectory)/pattern.strategy
# steps:
# #- script: |
# #    export SONAR_TOKEN=$(SONAR_TOKEN)
# #  displayName: 'Sonar Token'
# - script: |
#     dotnet tool install --global dotnet-sonarscanner --version 5.7.1
#     dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.9
#     dotnet sonarscanner begin \
#     /o:lucasmachado \
#     /k:9D915261-4352-490A-858E-0D73D6BAFBE4 \
#     /d:sonar.coverageReportPaths=../TestResults/SonarQube.xml \
#     /d:sonar.host.url=https://sonarcloud.io \
#     /d:sonar.coverage.exclusions="**Test*.cs"
#   displayName: "Sonar Begin"
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'Dotnet Build'
# - script: dotnet test --logger trx --results-directory ../TestResults/ --collect:"XPlat Code Coverage" --no-restore -m:1
#   displayName: 'Dotnet Test'
# - script: reportgenerator -reporttypes:"SonarQube" -reports:"../TestResults/**/*.cobertura.xml" -targetdir:"../TestResults/"
#   displayName: 'Report Generator'
# - script: dotnet sonarscanner end
#   env:
#     SONAR_TOKEN: $(SONAR_TOKEN)
#   displayName: 'Sonar End'


