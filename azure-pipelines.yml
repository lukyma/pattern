# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  packageVersion: 2.5.0
  netCoreVersion: 6.x

stages:
  - stage: Build
    jobs:
      - job: "BuildAndPublishSonar"
        steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '6.x'
        - script: |
            dotnet tool install --global dotnet-sonarscanner --version 5.7.1
            dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.9
            dotnet sonarscanner begin \
            /o:lucasmachado \
            /k:9D915261-4352-490A-858E-0D73D6BAFBE4 \
            /d:sonar.coverageReportPaths=../TestResults/SonarQube.xml \
            /d:sonar.host.url=https://sonarcloud.io \
            /d:sonar.coverage.exclusions="**Test*.cs"
          displayName: "Sonar Begin"
        - script: | 
            dotnet build $(System.DefaultWorkingDirectory)/pattern.strategy/pattern.strategy.csproj \
            --configuration $(buildConfiguration)
            dotnet build $(System.DefaultWorkingDirectory)/pattern.strategy.test/pattern.strategy.test.csproj \
            --configuration $(buildConfiguration)
          displayName: "Dotnet Build"
        - script: | 
            dotnet test $(System.DefaultWorkingDirectory)/pattern.strategy/pattern.strategy.csproj \
            --framework $(netCoreVersion) --logger trx --results-directory ../TestResults/ \
            --collect:"XPlat Code Coverage" --no-restore -m:1
          displayName: 'Dotnet Test'
        - script: ls .
        - script: reportgenerator -reporttypes:"SonarQube" -reports:"../TestResults/**/*.cobertura.xml" -targetdir:"../TestResults/"
          displayName: 'Report Generator'
        - script: dotnet sonarscanner end
          env:
            SONAR_TOKEN: $(SONAR_TOKEN)
          displayName: 'Sonar End'
  - stage: PublishPackage
    dependsOn:
    - Build
    condition: succeeded('Build')
    jobs:
      - job: 
        steps:
          - script: | 
              dotnet build $(System.DefaultWorkingDirectory)/pattern.strategy/pattern.strategy.csproj \
              --configuration $(buildConfiguration)
            displayName: "Dotnet Build"
          - script: |
              dotnet pack $(System.DefaultWorkingDirectory)/pattern.strategy/pattern.strategy.csproj \
              -p:PackageVersion=$(packageVersion) \
              --output $(System.DefaultWorkingDirectory)/package \
              --configuration $(buildConfiguration)
            displayName: "GeneratePackage"
            condition: succeeded()
          - script: |
              dotnet nuget push $(System.DefaultWorkingDirectory)/package/Pattern.$(packageVersion).nupkg \
              --source https://api.nuget.org/v3/index.json \
              --api-key $(TOKEN_NUGET) \
              --skip-duplicate
            displayName: PublishPackage
            condition: succeeded()
            env:
              TOKEN_NUGET: $(TOKEN_NUGET)


